name: "Publish new release"

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  release:
    name: Publish new release
    runs-on: ubuntu-latest
    # only merged pull requests that begin with 'release/' or 'hotfix/' must trigger this job
    if: github.event.pull_request.merged == true &&
      (startsWith(github.event.pull_request.head.ref, 'release/') || startsWith(github.event.pull_request.head.ref, 'hotfix/'))

    steps:
#       - name: Extract version from branch name (for release branches)
#         if: startsWith(github.event.pull_request.head.ref, 'release/')
#         run: |
#           BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
#           VERSION=${BRANCH_NAME#release/}

#           echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

#       - name: Extract version from branch name (for hotfix branches)
#         if: startsWith(github.event.pull_request.head.ref, 'hotfix/')
#         run: |
#           BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
#           VERSION=${BRANCH_NAME#hotfix/}

#           echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
      
#       - name: Create Release
#         run: gh release create $RELEASE_VERSION --generate-notes
#         env:
#           RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: "📥 Check-out"
        uses: actions/checkout@v1
        
      - name: "✏️ Generate release changelog"
        id: generate-release-changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          headerLabel: "# 📑 Changelog"
          breakingLabel: '### 💥 Breaking'
          enhancementLabel: '### 🚀 Enhancements'
          bugsLabel: '### 🐛 Bug fixes'
          deprecatedLabel: '### ⚠️ Deprecations'
          removedLabel: '### 🔥 Removals'
          securityLabel: '### 🛡️ Security'
          issuesLabel: '### 📁 Other issues'
          prLabel: '### 📁 Other pull requests'
          addSections: '{"documentation":{"prefix":"### 📖 Documentation","labels":["documentation"]},"tests":{"prefix":"### ✅ Testing","labels":["tests"]}}'
          issues: true
          issuesWoLabels: true
          pullRequests: true
          prWoLabels: true
          author: true
          unreleased: true
          compareLink: true
          stripGeneratorNotice: true
          verbose: true
          
      - name: "🚀 Create GitHub release"
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.generate-release-changelog.outputs.changelog }}

      
#       - name: Create Release
#         uses: thomaseizinger/create-release@1.0.0
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           target_commitish: ${{ github.event.pull_request.merge_commit_sha }}
#           tag_name: ${{ env.RELEASE_VERSION }}
#           name: ${{ env.RELEASE_VERSION }}
#           draft: false
#           prerelease: false

#       - name: Merge master into dev branch
#         uses: thomaseizinger/create-pull-request@1.0.0
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           head: master
#           base: dev
#           title: Merge master into dev branch
#           body: |
#             This PR merges the master branch back into dev.
#             This happens to ensure that the updates that happend on the release branch, i.e. CHANGELOG and manifest updates are also present on the dev branch.

      # if needed, you can checkout the latest master here, build artifacts and publish / deploy them somewhere
      # the create-release action has an output `upload_url` output that you can use to upload assets

      
